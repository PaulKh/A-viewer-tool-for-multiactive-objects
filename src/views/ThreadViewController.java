package views;

import model.ActiveObjectThread;
import utils.SizeHelper;

import javax.swing.*;
import java.awt.*;

/**
 * Created by pkhvoros on 3/16/15.
 */
public class ThreadViewController {
    private ActiveObjectThread activeObjectThread;
    private JPanel threadContainer;
    private JLabel threadId;
    private JPanel flowContainer;

    public ThreadViewController(ActiveObjectThread activeObjectThread) {
        this.activeObjectThread = activeObjectThread;

    }

    public JPanel getRootPanel() {
        return threadContainer;
    }

    public void drawThread(SizeHelper sizeHelper) {
        this.threadId.setText("Thread id = " + activeObjectThread.getThreadId());
        threadContainer.setMinimumSize(new Dimension(2000, 50));
        return;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        threadContainer = new JPanel();
        threadContainer.setLayout(new GridBagLayout());
        threadContainer.setAlignmentX(0.0f);
        threadContainer.setAlignmentY(0.0f);
        threadContainer.setMinimumSize(new Dimension(-1, -1));
        threadContainer.setPreferredSize(new Dimension(-1, -1));
        threadContainer.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), null));
        threadId = new JLabel();
        threadId.setText("Label");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 0.5;
        gbc.weighty = 0.5;
        gbc.anchor = GridBagConstraints.WEST;
        threadContainer.add(threadId, gbc);
        flowContainer = new JPanel();
        flowContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        threadContainer.add(flowContainer, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("Label");
        flowContainer.add(label1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        flowContainer.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        flowContainer.add(spacer2, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return threadContainer;
    }
}
